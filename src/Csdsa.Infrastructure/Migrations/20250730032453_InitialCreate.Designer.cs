// <auto-generated />
using System;
using Csdsa.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Csdsa.Infrastructure.Migrations;

[DbContext(typeof(AppDbContext))]
[Migration("20250730032453_InitialCreate")]
partial class InitialCreate
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.7")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgcrypto");
        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Csdsa.Domain.Models.Common.UserEntities.User.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id")
                    .HasDefaultValueSql("gen_random_uuid()");

                b.Property<DateTime>("CreatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("created_at")
                    .HasDefaultValueSql("TIMEZONE('utc', now())");

                b.Property<string>("CreatedBy")
                    .HasMaxLength(450)
                    .HasColumnType("character varying(450)")
                    .HasColumnName("created_by");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("character varying(500)")
                    .HasColumnName("email");

                b.Property<bool>("IsActive")
                    .HasColumnType("boolean")
                    .HasColumnName("is_active");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("is_deleted");

                b.Property<string>("PasswordHash")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("character varying(500)")
                    .HasColumnName("password_hash");

                b.Property<int>("Role")
                    .HasColumnType("integer")
                    .HasColumnName("role");

                b.Property<DateTime?>("UpdatedAt")
                    .ValueGeneratedOnUpdate()
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("updated_at");

                b.Property<string>("UpdatedBy")
                    .HasMaxLength(450)
                    .HasColumnType("character varying(450)")
                    .HasColumnName("updated_by");

                b.Property<string>("UserName")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("character varying(500)")
                    .HasColumnName("user_name");

                b.HasKey("Id")
                    .HasName("p_k_users");

                b.HasIndex("CreatedAt")
                    .HasDatabaseName("ix_users_created_at");

                b.HasIndex("IsDeleted")
                    .HasDatabaseName("ix_users_is_deleted");

                b.HasIndex("IsDeleted", "CreatedAt")
                    .HasDatabaseName("ix_users_is_deleted_created_at");

                b.ToTable("users");
            });
#pragma warning restore 612, 618
    }
}
